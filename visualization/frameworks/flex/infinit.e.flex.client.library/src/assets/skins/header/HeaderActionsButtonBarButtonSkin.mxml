<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2012, The Infinit.e Open Source Project.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License, version 3,
   as published by the Free Software Foundation.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.
   
   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:common="com.ikanow.infinit.e.shared.view.component.common.*"
	xmlns:component="com.ikanow.infinit.e.shared.view.component.*"
	minWidth="21"
	minHeight="30"
	alpha.disabledStates="0.5">

	<fx:Metadata>[HostComponent("spark.components.ButtonBarButton")]</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import spark.components.ButtonBarButton;
			import spark.components.DataGroup;
			
			private static const exclusions:Array = [ "labelDisplay" ];
			
			override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void
			{
				super.updateDisplayList( unscaledWidth, unscaledHeight );
				
				var buttonBarButton:ButtonBarButton = ButtonBarButton( hostComponent );
				
				// round the bottom left corner of the first button
				background.bottomLeftRadiusX = background.bottomLeftRadiusY = buttonBarButton.itemIndex == 0 ? 8 : 0;
				// shoe arrow only for first button
				arrowGroup.visible = arrowGroup.includeInLayout = buttonBarButton.itemIndex == 0 ? true : false;
				// shoe separator if not the last button
				var dataGroup:DataGroup = DataGroup( hostComponent.parent );
				var lastButtonIndex:int = dataGroup.dataProvider.length - 1;
				separator.visible = separator.includeInLayout = buttonBarButton.itemIndex == lastButtonIndex ? false : true;
			}
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over"
			stateGroups="overStates" />
		<s:State name="down"
			stateGroups="downStates" />
		<s:State name="disabled"
			stateGroups="disabledStates" />
		<s:State name="upAndSelected"
			stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected"
			stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected"
			stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected"
			stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>

	<!-- background -->
	<s:Rect id="background"
		width="100%"
		height="100%">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:entries>
					<s:GradientEntry 
						color="0x5E6367"
						ratio=".4" />
					<s:GradientEntry 
						color.down="0x585d61"
						color.over="0x585d61"
						color.selectedStates="0x585d61"
						color.up="0x5E6367" />
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<s:HGroup 
		height="100%"
		left="6"
		verticalAlign="middle"
		gap="0">

		<!-- text -->
		<common:InfLabel id="labelDisplay"
			styleName.up="lightGrey"
			styleName.over="veryLightGrey"
			styleName.down="lightGrey"
			styleName.selectedStates="veryLightGrey"
			bottom="2"
			horizontalCenter="0"
			paddingLeft="6"
			paddingRight="12"
			paddingTop="1"
			top="2"
			verticalAlign="middle"
			verticalCenter="1" />

		<!-- arrow -->
		<s:Group id="arrowGroup"
			width="19">
			<s:Path id="arrow"
				height="7"
				width="10"
				data="M 8.75 15.10 L 0.05 0.03 17.45 0.03 Z "
				left="-2"
				top="1">
				<s:fill>
					<s:SolidColor 
						color.down="0x97989A"
						color.over="0xcccccc"
						color.selectedStates="0xcccccc"
						color.up="0x97989A" />
				</s:fill>
			</s:Path>
		</s:Group>

		<!-- separator -->
		<component:VSeparator id="separator"
			styleName="headerActionsButtonSeparator" />

	</s:HGroup>

</s:SparkButtonSkin>
