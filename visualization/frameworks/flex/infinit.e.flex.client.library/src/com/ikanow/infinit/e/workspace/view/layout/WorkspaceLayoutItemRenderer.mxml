<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2012, The Infinit.e Open Source Project.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License, version 3,
   as published by the Free Software Foundation.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	implements="com.ikanow.infinit.e.workspace.view.layout.IWorkspaceVisualElement">

	<fx:Script>
		<![CDATA[
			import com.ikanow.infinit.e.shared.model.vo.Widget;
			
			private var _positionIndex:int;
			
			
			[Bindable]
			public function get positionIndex():int
			{
				return _positionIndex;
			}
			
			public function set positionIndex( value:int ):void
			{
				_positionIndex = value;
			}
			
			private var _maximized:Boolean;
			
			[Bindable]
			public function get maximized():Boolean
			{
				return _maximized;
			}
			
			public function set maximized( value:Boolean ):void
			{
				_maximized = value;
			}
			
			override public function set data( value:Object ):void
			{
				super.data = value;
				
				if ( value == null )
					return;
				
				var widget:Widget = value as Widget;
				
				// set the position index
				positionIndex = widget.positionIndex;
				
				_color = widget.isBeingDragged ? 0x99CC66 : ( widget.isBeingReplaced ? 0x6699CC : 0x999999 );
				
				// update the parent layout
				invalidateParentSizeAndDisplayList();
			}
			
			[Bindable]
			private var _color:int = 0x999999;
		]]>
	</fx:Script>

	<!-- tile bg, colored according to isBeingDragged property of Widget -->
	<s:Group 
		width="100%"
		height="100%">
		<s:Rect 
			width="100%"
			height="100%"
			topLeftRadiusX="8"
			topLeftRadiusY="8"
			topRightRadiusX="8"
			topRightRadiusY="8">
			<s:fill>
				<s:SolidColor 
					color="{ _color }"
					alpha=".4" />
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke 
					color="#999999"
					weight="1" />
			</s:stroke>
		</s:Rect>
	</s:Group>

	<!-- centered label with white bg -->
	<s:Group 
		height="25"
		minWidth="50"
		horizontalCenter="0"
		verticalCenter="0">
		<s:Rect 
			width="100%"
			height="100%"
			radiusX="7"
			radiusY="7">
			<s:fill>
				<s:SolidColor 
					color="#FFFFFF"
					alpha=".75" />
			</s:fill>
		</s:Rect>
		<s:Label 
			text="{ data.title }"
			horizontalCenter="0"
			paddingLeft="15"
			paddingRight="15"
			verticalCenter="0" />
	</s:Group>

</s:ItemRenderer>
