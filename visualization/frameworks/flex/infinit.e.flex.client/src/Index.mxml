<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2012, The Infinit.e Open Source Project.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License, version 3,
   as published by the Free Software Foundation.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:config="com.ikanow.infinit.e.config.*"
	xmlns:view="com.ikanow.infinit.e.view.*"
	width="100%"
	height="100%"
	backgroundColor="#363E41" addedToStage="application1_addedToStageHandler(event)"
	initialize="initializeHandler()">

	<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
	<!-- Resources :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

	<fx:Metadata>
		[ResourceBundle("infinite")]
	</fx:Metadata>

	<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
	<!-- Styles ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

	<fx:Style source="assets/css/infiniteStyles.css" />
	<fx:Style source="assets/css/Common.css" />
	<fx:Style source="assets/css/Query.css" />
	<fx:Style source="assets/css/History.css" />
	<fx:Style source="assets/css/Workspaces.css" />

	<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
	<!-- Declarations:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

	<fx:Declarations>
		<config:Config />
	</fx:Declarations>

	<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
	<!-- Script:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

	<fx:Script>
		<![CDATA[
			import com.ikanow.infinit.e.shared.util.BrowserUtil;
			import com.ikanow.infinit.e.utility.MouseWheelEnabler;
			
			protected function initializeHandler():void
			{
				//mouseSupport = new MouseWheelSupport();
				// listen for uncaught errors
				systemManager.loaderInfo.uncaughtErrorEvents.addEventListener( UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler );
				
				// set the browser window title
				var title:String = flash.external.ExternalInterface.call( "getPageTitle" );
				
				if ( title == null || title == "" )
				{
					BrowserUtil.setBrowserWindowTitle( resourceManager.getString( 'infinite', 'application.title' ) );
				}
				else
				{
					//switched to read window title from appconstants
					BrowserUtil.setBrowserWindowTitle( title );
				}
			}
			
			protected function uncaughtErrorHandler( e:UncaughtErrorEvent ):void
			{
				e.preventDefault();
				
				var s:String;
				
				if ( e.error is Error )
				{
					var error:Error = e.error as Error;
					s = "Uncaught Error: " + error.errorID + ", " + error.name + ", " + error.message;
				}
				else
				{
					var errorEvent:ErrorEvent = e.error as ErrorEvent;
					s = "Uncaught ErrorEvent: " + errorEvent.errorID;
				}
				
				trace( s );
			}

			protected function application1_addedToStageHandler(event:Event):void
			{
				//turn on mousewheel so it works in firefox
				MouseWheelEnabler.init( this.stage );
			}

		]]>
	</fx:Script>

	<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
	<!-- Views :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

	<!-- Main View -->
	<view:Main id="mainView"
		width="100%"
		height="100%" />

</s:Application>

