#!/bin/sh
#
# Infinit.e harvester/cleanser service
#
# description: Infinit.e harvester/cleanser service
# probe: false
# chkconfig: 345 85 1

PATH=/sbin:/bin:/usr/bin
RETVAL="0"

if [ -f /lib/lsb/init-functions ] && ! [ -e /etc/redhat-release ]; then
. /lib/lsb/init-functions
else
if [ -f /etc/init.d/functions ]; then
. /etc/init.d/functions
fi

# int log_begin_message (char *message)
log_begin_msg () {
        if [ -z "$1" ]; then
                return 1
        fi

        if type usplash_write >/dev/null 2>&1; then
            usplash_write "TEXT $*" || true
        fi

        # Only do the fancy stuff if we have an appropriate terminal
        # and if /usr is already mounted
        TPUT=/usr/bin/tput
        EXPR=/usr/bin/expr
        if [ -x $TPUT ] && [ -x $EXPR ] && \
                $TPUT xenl >/dev/null 2>&1 && \
                $TPUT hpa 60 >/dev/null 2>&1; then
            COLS=`$TPUT cols`
            if [ -n "$COLS" ]; then
                 COL=`$EXPR $COLS - 7`
            else
                 COL=73
            fi
            # We leave the cursor `hanging' about-to-wrap
            # (see terminfo(5) xenl, which is approximately right).
            # That way if the script prints anything then we will
            # be on the next line and not overwrite part of the message.

            # Previous versions of this code attempted to colour-code
            # the asterisk but this can't be done reliably because
            # in practice init scripts sometimes print messages even
            # when they succeed and we won't be able to reliably know
            # where the colourful asterisk ought to go.
            
            printf " * $*       "
            # Enough trailing spaces for ` [fail]' to fit in; if the
            # message is too long it wraps here rather than later,
            # which is what we want.
            $TPUT hpa `$EXPR $COLS - 1`
            printf ' '
        else
            echo " * $*"
            COL=''
        fi
}

# int log_end_message (int exitstatus)
log_end_msg () {

    # If no arguments were passed, return
    [ -z "$1" ] && return 1

    if type usplash_write >/dev/null 2>&1; then
        if [ $1 -eq 0 ]; then
            usplash_write "SUCCESS ok" || true
        else
            usplash_write "FAILURE failed" || true
        fi
    fi

    if [ "$COL" ]; then
        printf "\r"
        $TPUT hpa $COL
        if [ $1 -eq 0 ]; then
            echo "[ ok ]"
        else
            printf '['
            $TPUT setaf 1  # red
            printf fail
            $TPUT op  # normal
            echo ']'
        fi
    else
        if [ $1 -eq 0 ]; then
            echo "   ...done."
        else
            echo "   ...fail!"
        fi
    fi
    return $1
}

log_success_msg () {
    if type usplash_write >/dev/null 2>&1; then
        usplash_write "STATUS $*" || true
    fi
    echo " * $@"
}

fi

#############################################################################
#
# INFINITE SPECIFIC CODE
#

HOME_DIR=/opt/infinite-home

# START

start_apps() {
  sysctl -w net.ipv4.tcp_syn_retries=2
  log_begin_msg "Starting Infinit.e harvester/cleanser..."
  echo

  runuser -s /bin/bash - tomcat -c "/opt/infinite-home/bin/infinite-px-engine.sh >/dev/null 2>&1" &
  RETVAL=$?

  log_end_msg $RETVAL
  
  if [ $RETVAL -ne 0 ]; then
  	stop_apps
  fi
  touch /var/lock/subsys/infinite-px-engine
  return $RETVAL
}

# STOP

stop_apps() {
  log_begin_msg "Stopping Infinit.e harvester/cleanser (completing source, may take a few minutes)...."
  echo  
  pkill -15 -f infinit.e.core.server.jar
  
  #(Harvester only)
  while pgrep -f /opt/infinite-home/bin/infinite-px-engine.sh > /dev/null; do
  	sleep 1
  done
  rm -f /var/lock/subsys/infinite-px-engine
  
  log_end_msg 0
  
}

case "$1" in
start)
	start_apps
	if [ $? -eq 0 ]; then
    	rm -f $HOME_DIR/bin/STOPFILE
    fi
  ;;
stop)
    touch $HOME_DIR/bin/STOPFILE
	stop_apps
  ;;
watchdog)
  if [ ! -f $HOME_DIR/bin/STOPFILE ] && [ ! -f $HOME_DIR/bin/ALLSTOPFILE ]; then
	if ! pgrep -u tomcat -f /opt/infinite-home/bin/infinite-px-engine.sh > /dev/null; then
  		start_apps 	
  	fi
  fi
	;;
restart)
    touch $HOME_DIR/bin/STOPFILE
    #^^(have this so that won't sync after killing running harvester)
  stop_apps
    	rm -f $HOME_DIR/bin/STOPFILE
  start_apps
  ;;
status)
            if ! pgrep -f /opt/infinite-home/bin/infinite-px-engine.sh; then
                echo "$is stopped"
                RETVAL="3"
            else
                echo "is running..."
                RETVAL="0"
            fi

  ;;
*)
  log_success_msg "Usage: /etc/init.d/infinite {start|stop|restart|watchdog|status}"
  exit 1
esac

exit $RETVAL

