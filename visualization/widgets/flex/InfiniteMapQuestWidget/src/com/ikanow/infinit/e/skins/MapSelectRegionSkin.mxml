<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2012, The Infinit.e Open Source Project
   
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   
   http://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="30" minHeight="30" alpha.disabled="0.5" width="20" height="20">
    
    <!-- host component -->
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
	<fx:Script fb:purpose='styling'>
		<![CDATA[    
			private var selected:Boolean = false;
			
			public function changeSelected(isSelected:Boolean):void
			{
				selected = isSelected;
				stateChanged(this.currentState, "up",false);
			}
			public function isSelected():Boolean
			{
				return selected;
			}
			
			override protected function stateChanged(oldState:String, newState:String, recursive:Boolean):void
			{		
				if ( selected ) //show selected skins
				{
					if ( newState == "up" )
					{
						this.currentState = "selectedUpSkin";
					}
					else if ( newState == "over" )
					{
						this.currentState = "selectedOverSkin";
					}
					else if ( newState == "down" )
					{
						this.currentState = "selectedDownSkin";
					}
				}	
				else
				{
					if ( newState == "up" )
					{
						this.currentState = "up";
					}
					else if ( newState == "over" )
					{
						this.currentState = "over";
					}
					else if ( newState == "down" )
					{
						this.currentState = "down";
					}
				}
			}			
		]]>        
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />	
		<s:State name="selectedOverSkin" />	
		<s:State name="selectedDownSkin" />	
		<s:State name="selectedUpSkin" />	
	</s:states>
	
	<s:Rect width="20" height="20" includeIn="selectedUpSkin,selectedDownSkin" >	
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#000000"
								 alpha=".25" />
				<s:GradientEntry color="#000000"
								 alpha=".25" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect width="20" height="20" includeIn="over,selectedOverSkin" >	
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#FFFFFF"
								 alpha=".5" />
				<s:GradientEntry color="#838080"
								 alpha=".5" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:BitmapImage id="Degree" source="@Embed('../assets/icons/map.png')"  y="0" x="0" width="20" height="20" verticalCenter="0" horizontalCenter="0"/>

</s:SparkSkin>
