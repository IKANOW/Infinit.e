<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="infinit.e.build" default="createrepo">
	
	<!-- Versioning: these are not set again if already set -->
	<property name="bamboo.majorBuild" value="localBuild"/>
	<property name="bamboo.minorBuild" value="0"/>
	<property name="bamboo.custom.svn.revision.number" value="0"/>
	
	<property name="infinite_version" value="${bamboo.majorBuild}.${bamboo.minorBuild}"/>
	<property name="infinite_release" value="${bamboo.custom.svn.revision.number}"/>

	<!-- (Bamboo dir structure) -->
	<property name="utility" value="../../../utility"/>
	<property name="core" value="../../../core"/>
	<property name="gui" value="../../../visualization/frameworks/flex"/>
	<property name="widgets" value="../../../visualization/widgets/flex"/>
	<property name="rpm" value="../../rpm"/>
	
	<!-- Convert to flat structure -->
	<move todir=".." failonerror="false" verbose="false">
		<fileset dir="${utility}" includes="**/*"/>
		<fileset dir="${core}" includes="**/*"/>
		<fileset dir="${gui}" includes="**/*"/>
		<fileset dir="${widgets}" includes="**/*"/>
		<fileset dir="${rpm}" includes="**/*"/>
	</move>
	
	<!-- Link elasticsearch to the current highest production version -->
	<copy todir="${basedir}/../infinit.e.elasticsearch.driver">
	    <fileset dir="${basedir}/../infinit.e.elasticsearch.driver_1.0"/>
	</copy>
	    	
	<!-- All the dir paths -->
	<property name="infinit.e.data_model.location" value="${basedir}/../infinit.e.data_model"/>
	<property name="infinit.e.harvest.library.location" value="${basedir}/../infinit.e.harvest.library"/>
	<property name="infinit.e.processing.generic.library.location" value="${basedir}/../infinit.e.processing.generic.library"/>
	<property name="infinit.e.processing.custom.library.location" value="${basedir}/../infinit.e.processing.custom.library"/>
	<property name="infinit.e.api.server.location" value="${basedir}/../infinit.e.api.server"/>
	<property name="infinit.e.core.server.location" value="${basedir}/../infinit.e.core.server"/>
	<property name="infinit.e.mongo-indexer.location" value="${basedir}/../infinit.e.mongo-indexer"/>
	<property name="infinit.e.hadoop.prototyping_engine.location" value="${basedir}/../infinit.e.hadoop.prototyping_engine"/>
	
	<property name="infinit.e.flex.location" value="${basedir}/../infinit.e.flex.client"/>
	<property name="InfiniteDocBrowserWidget.location" value="${basedir}/../InfiniteDocBrowserWidget"/>
	<property name="InfiniteEventGraphWidget.location" value="${basedir}/../InfiniteEventGraphWidget"/>
	<property name="InfiniteMapQuestWidget.location" value="${basedir}/../InfiniteMapQuestWidget"/>
	<property name="InfiniteQueryMetricsWidget.location" value="${basedir}/../InfiniteQueryMetricsWidget"/>
	<property name="InfiniteSentimentWidget.location" value="${basedir}/../InfiniteSentimentWidget"/>
	<property name="InfiniteSignificanceWidget.location" value="${basedir}/../InfiniteSignificanceWidget"/>
	<property name="InfiniteTimelineEventWidget.location" value="${basedir}/../InfiniteTimelineEventWidget"/>
	<property name="InfiniteTimelineWidget.location" value="${basedir}/../InfiniteTimelineWidget"/>
	<property name="InfiniteSourceMonitor.location" value="${basedir}/../InfiniteSourceMonitor"/>
	<property name="InfiniteCustomMonitor.location" value="${basedir}/../InfiniteCustomMonitor"/>
	<property name="InfiniteEntityProfiler.location" value="${basedir}/../InfiniteEntityProfiler"/>
	<property name="InfiniteKibanaConnector.location" value="${basedir}/../infinit.e.kibana_connector"/>
	
	<property name="chrome.extension.source-updater.location" value="${basedir}/../chrome.extension.source-updater"/>
	<property name="infinit.e.records.server.location" value="${basedir}/../infinit.e.records.server"/>
	
	<property name="infinit.e.web.location" value="${basedir}/../infinit.e.web"/>
	<property name="Infinit.e.Manager.location" value="${basedir}/../Infinit.e.Manager"/>
	<property name="infinit.e-config.rpm.location" value="${basedir}/../infinit.e-config.rpm"/>
	<property name="infinit.e-index-engine.rpm.location" value="${basedir}/../infinit.e-index-engine.rpm"/>
	<property name="infinit.e-interface-engine.rpm.location" value="${basedir}/../infinit.e-interface-engine.rpm"/>
	<property name="infinit.e-processing-engine.rpm.location" value="${basedir}/../infinit.e-processing-engine.rpm"/>
	<property name="infinit.e-record-engine.rpm.location" value="${basedir}/../infinit.e-record-engine.rpm"/>
	<property name="infinit.e-db-instance.rpm.location" value="${basedir}/../infinit.e-db-instance.rpm"/>
	
	<!-- =================================
		target sub-projects
	===================================-->
	<target name="build" description="Run build for all sub projects">
		<echo message="${ant.project.name} starting"/>

		<ant antfile="${infinit.e.data_model.location}/build.xml">
			<property name="basedir" value="${infinit.e.data_model.location}"/>
		</ant>
		<ant antfile="${infinit.e.harvest.library.location}/build.xml">
			<property name="basedir" value="${infinit.e.harvest.library.location}"/>
		</ant>
		<ant antfile="${infinit.e.processing.generic.library.location}/build.xml">
			<property name="basedir" value="${infinit.e.processing.generic.library.location}"/>
		</ant>
		<ant antfile="${infinit.e.api.server.location}/build.xml" target="jar">
		    <!-- First call: just builds the query library JAR (do this to avoid circular deps vs custom library)  -->
			<property name="basedir" value="${infinit.e.api.server.location}"/>
		</ant>
		<ant antfile="${infinit.e.processing.custom.library.location}/build.xml">
			<property name="basedir" value="${infinit.e.processing.custom.library.location}"/>
		</ant>
		<ant antfile="${infinit.e.api.server.location}/build.xml">
		    <!-- Second call: builds WAR and es JAR (do this to avoid circular deps vs custom library)  -->
		    <property name="basedir" value="${infinit.e.api.server.location}"/>
		</ant>
		<ant antfile="${infinit.e.core.server.location}/build.xml">
			<property name="basedir" value="${infinit.e.core.server.location}"/>
		</ant>
		<ant antfile="${infinit.e.mongo-indexer.location}/build.xml">
			<property name="basedir" value="${infinit.e.mongo-indexer.location}"/>
		</ant>
		<ant antfile="${infinit.e.hadoop.prototyping_engine.location}/build.xml">
			<property name="basedir" value="${infinit.e.hadoop.prototyping_engine.location}"/>
		</ant>
		<ant antfile="${infinit.e.flex.location}/build/build.xml">
			<property name="basedir" value="${infinit.e.flex.location}"/>
			<!-- (Also builds the flex.client.library which builds the widget.library) -->
		</ant>
		
		<!-- Widgets (depends on widget.library build) -->
		<ant antfile="${InfiniteDocBrowserWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteDocBrowserWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteEventGraphWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteEventGraphWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteMapQuestWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteMapQuestWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteQueryMetricsWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteQueryMetricsWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteSentimentWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteSentimentWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteSignificanceWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteSignificanceWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteTimelineEventWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteTimelineEventWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteTimelineWidget.location}/build/build.xml">
			<property name="basedir" value="${InfiniteTimelineWidget.location}"/>
		</ant>
		<ant antfile="${InfiniteSourceMonitor.location}/build/build.xml">
			<property name="basedir" value="${InfiniteSourceMonitor.location}"/>
		</ant>
		<ant antfile="${InfiniteCustomMonitor.location}/build/build.xml">
			<property name="basedir" value="${InfiniteCustomMonitor.location}"/>
		</ant>
		<ant antfile="${InfiniteEntityProfiler.location}/build/build.xml">
			<property name="basedir" value="${InfiniteEntityProfiler.location}"/>
		</ant>
		<ant antfile="${InfiniteKibanaConnector.location}/build/build.xml">
			<property name="basedir" value="${InfiniteKibanaConnector.location}"/>
		</ant>

		<!-- Non widgets that need to be built after the widget -->
		<ant antfile="${chrome.extension.source-updater.location}/build.xml">
			<property name="basedir" value="${chrome.extension.source-updater.location}"/>
		</ant>
		<ant antfile="${infinit.e.records.server.location}/build.xml">
			<property name="basedir" value="${infinit.e.records.server.location}"/>
		</ant>
		
		<!-- Misc other GUI components -->		
		<ant antfile="${infinit.e.web.location}/build.xml">
			<property name="basedir" value="${infinit.e.web.location}"/>
		</ant>
		<ant antfile="${Infinit.e.Manager.location}/build.xml">
			<property name="basedir" value="${Infinit.e.Manager.location}"/>
		</ant>
		
		<!-- RPM builders -->
				
		<ant antfile="${infinit.e-config.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-config.rpm.location}"/>
		</ant>
		<ant antfile="${infinit.e-index-engine.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-index-engine.rpm.location}"/>
		</ant>
		<ant antfile="${infinit.e-interface-engine.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-interface-engine.rpm.location}"/>
		</ant>
		<ant antfile="${infinit.e-processing-engine.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-processing-engine.rpm.location}"/>
		</ant>
		<ant antfile="${infinit.e-record-engine.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-record-engine.rpm.location}"/>
		</ant>
		<ant antfile="${infinit.e-db-instance.rpm.location}/build.xml">
			<property name="basedir" value="${infinit.e-db-instance.rpm.location}"/>
		</ant>
		
	</target>

	<target name="createrepo" depends="build" description="Create yum repo for RPMs">
	    <!--  ONLINE -->
	    <mkdir dir="repo"/>
		<copy todir="repo">
			<fileset dir="${infinit.e-config.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
			<fileset dir="${infinit.e-index-engine.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
			<fileset dir="${infinit.e-interface-engine.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
			<fileset dir="${infinit.e-processing-engine.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
			<fileset dir="${infinit.e-record-engine.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
			<fileset dir="${infinit.e-db-instance.rpm.location}/RPMS/noarch/" includes="*.rpm"/>
		</copy>
	    <!--  OFFLINE -->
		<tar destfile="infinit.e-install-bundle.tar" basedir="repo"/>	    	    
	    <!--  FINISH ONLINE -->
		<exec executable="createrepo">
			<arg value="-s"/>
			<arg value="sha"/>
			<arg value="repo"/>
		</exec>
		<zip destfile="infinit.e-install-repo-${infinite_version}-${infinite_release}.zip" basedir="repo"/>	
	</target>


</project>